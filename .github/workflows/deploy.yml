name: Deploy Hugo Website

# 当 push 到 main 分支时触发此工作流程
on:
  push:
    branches:
      - main # 或者你用来写博客源文件的分支名，例如 master, source 等

# 定义一个名为 build-and-deploy 的任务
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 环境下运行

    steps:
      # 步骤 1: 检出 hugo 源文件仓库
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          # 如果你的主题是作为子模块引用的，需要加上这一行
          submodules: true
          fetch-depth: 0 # 保证有完整的提交历史，有时候主题或插件需要

      # 步骤 2: 设置 Hugo 环境
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.146.7' # 可以指定特定的 Hugo 版本，如 '0.120.0'
          # 如果你的主题需要 Hugo extended 版本（例如处理 Sass/SCSS），需要加上这一行
          extended: true

      # 3. 构建 Hugo 站点
      - name: Build
        run: hugo -t gallery # --minify 可以压缩生成的静态文件

      # 4. 部署到 ioslide.github.io 仓库
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3 # 使用一个专门用于部署到 GitHub Pages 的 Action
        with:
          # 使用之前在仓库设置中添加的 Secret
          # 这个 Token 必须有写入 ioslide/ioslide.github.io 仓库的权限
          deploy_key: ${{ secrets.ACTION_DEPLOY_TOKEN }}
          # 指定要部署的目录，Hugo 构建后的文件默认在 public/
          publish_dir: ./public
          # 指定目标仓库和分支
          # ioslide.github.io 仓库通常是把网站内容放在 main 分支
          external_repository: ioslide/ioslide.github.io
          publish_branch: main
          force_orphan: true # 强制创建一个新的分支，避免与现有的提交冲突